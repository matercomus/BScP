# Define a mapping for the 'Connection' header based on the 'Upgrade' header
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

# Redirect all HTTP traffic to HTTPS
server {
    listen 80;
    server_name hedge-iot.labs.vu.nl;

    location / {
        return 301 https://$host$request_uri;
    }
}

# Handle HTTPS traffic and proxy to JupyterHub
server {
    listen 443 ssl http2;
    server_name hedge-iot.labs.vu.nl;

    client_max_body_size 5M;

    # SSL configuration
    ssl_certificate /etc/nginx/certs/cert-chain.pem;
    ssl_certificate_key /etc/nginx/certs/key.pem;
    ssl_trusted_certificate /etc/nginx/certs/chain-root.pem;
    ssl_dhparam /etc/nginx/certs/dh.pem;

    # Proxy configuration for JupyterHub
    location /jh/ {
        proxy_pass http://jh:8000/jh/;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header X-Scheme $scheme;
        proxy_buffering off;
    }

    # Proxy configuration for Knowledge Engine
    location /knowledge-engine/ {
        proxy_pass http://knowledge-engine:8280/;
    }

    # Proxy configuration for Knowledge Engine Inter-Ker
    location /knowledge-engine-inter-ker/ {
        proxy_pass http://knowledge-engine:8082/;
    }

    # Proxy configuration for GraphDB
    location /graphdb/ {
        proxy_pass http://graphdb:7200/;
    }
}

