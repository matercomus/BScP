# Copyright (c) Jupyter Development Team.
# Distributed under the terms of the Modified BSD License.
services:
  nginx:
    image: nginx:latest
    container_name: nginx-jh
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./default.conf:/etc/nginx/conf.d/default.conf"
      - "/home/acme/default:/etc/nginx/certs"
      - "./public:/usr/share/nginx/html/public"
    restart: on-failure
    networks:
      - jupyterhub-network
    depends_on:
      knowledge-engine:
        condition: service_healthy
    
  knowledge-engine:
    image: ghcr.io/tno/knowledge-engine/smart-connector:1.2.5
    container_name: knowledge-engine-jh
    ports:
      - "8280:8280"
    environment:
      KE_RUNTIME_PORT: 8082
      KE_RUNTIME_EXPOSED_URL: https://www.hedge-iot.labs.vu.nl/knowledge-engine-inter-ker
      KD_URL: https://${KE_USER}:${KE_PASS}@hedgeiot.knowledge-engine.eu/kd
    restart: on-failure
    healthcheck:
      test: ["CMD", "ping", "-c", "1", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s
    networks:
      - jupyterhub-network

  jh:
    build:
      context: .
      dockerfile: Dockerfile.jupyterhub
      args:
        JUPYTERHUB_VERSION: 3.0.0
    restart: always
    image: jupyterhub
    container_name: jupyterhub
    networks:
      - jupyterhub-network
    volumes:
      # The JupyterHub configuration file
      - "./jupyterhub_config.py:/srv/jupyterhub/jupyterhub_config.py:ro"
      # Bind Docker socket on the host so we can connect to the daemon from
      # within the container
      - "/var/run/docker.sock:/var/run/docker.sock:rw"
      # Bind Docker volume on host for JupyterHub database and cookie secrets
      - "jupyterhub-data:/data"
    ports:
      - "9999:8000"
      - "8888:8888"
    environment:
      # This username will be a JupyterHub admin
      JUPYTERHUB_ADMIN: admin
      # All containers will join this network
      DOCKER_NETWORK_NAME: jupyterhub-network
      # JupyterHub will spawn this Notebook image for users
      DOCKER_NOTEBOOK_IMAGE: matercomus/jupyterlab3:3
      # Notebook directory inside user image
      DOCKER_NOTEBOOK_DIR: /home/jovyan/work
      # Using this run command
      DOCKER_SPAWN_CMD: start-singleuser.sh
      # Project directory
      JUPYTERHUB_CWD: ${PWD}
    command: >
      jupyterhub -f /srv/jupyterhub/jupyterhub_config.py

  # knowledge-directory:
  #   container_name: knowledge-directory
  #   image: ghcr.io/tno/knowledge-engine/knowledge-directory:1.2.5
  #   ports:
  #     - "8282:8282"
  #   networks:
  #     - jupyterhub-network

  # knowledge-engine:
  #   image: ghcr.io/tno/knowledge-engine/smart-connector:1.2.5
  #   container_name: knowledge-engine
  #   restart: always
  #   ports:
  #     - "8280:8280"
  #   networks:
  #     - jupyterhub-network
  #   environment:
  #     KE_RUNTIME_PORT: 8081
  #     KE_RUNTIME_EXPOSED_URL: http://knowledge-engine:8081
  #     KD_URL: http://knowledge-directory:8282




  graphdb:
    image: ontotext/graphdb:10.7.0
    container_name: graphdb
    restart: always
    volumes:
      - "graphdb-data:/opt/graphdb/home"
    ports:
      - "7200:7200"
    networks:
      - jupyterhub-network
    environment:
      graphdb.external-url: https://hedge-iot.labs.vu.nl/graphdb/


volumes:
  jupyterhub-data:
  graphdb-data:


networks:
  jupyterhub-network:
    name: jupyterhub-network
